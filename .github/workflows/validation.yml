name: Run New Service Validation
on:
  workflow_call:
    inputs:
      run_id:
        description: 'Specify the run id'
        required: true
        default: null
        type: number
jobs:
  Run-OPA-Tests:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    # Print the GitHub event context
    - name: Print GitHub Event Context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: |
        echo "GitHub Event Context:"
        echo "$GITHUB_CONTEXT"
      shell: bash

    - name: Setup OPA
      uses: open-policy-agent/setup-opa@v2
      with:
        version: latest

    - name: OPA Version
      run: opa version

    - name: Download Terraform Plan
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan
        path: ./terraform
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ inputs.run_id }}

    - name: Run OPA Tests
      run: |
        opa eval --data  tests/terraform.rego --input  terraform/tfplan.json "data.terraform.policy.resource_change_limits.resource_change_summary" -f raw > opa_result.json
        cat opa_result.json
        opa_result=$(jq -c '.' opa_result.json)
        echo $opa_result
        escaped_result=$(echo "$opa_result" | sed 's/"/\\"/g')
        echo "opa_result=$escaped_result" >> $GITHUB_ENV

    - name: Run OPA Validation
      run: |
        opa eval --data  tests/terraform.rego --input  terraform/tfplan.json "data.terraform.policy.resource_change_limits.authz" -f raw > opa_authz.json
        cat opa_authz.json
        opa_authz=$(jq -c '.' opa_authz.json)
        echo $opa_authz
        echo "opa_authz=$opa_authz" >> $GITHUB_ENV        

    # Approve the PR if the "approved" attribute is true
    - name: Approve Pull Request
      if: github.event.workflow_run.event == 'pull_request' && env.opa_authz == 'true'
      uses: octokit/request-action@v2.4.0
      with:
        route: POST /repos/${{ github.repository }}/pulls/${{ github.event.workflow_run.pull_requests[0].number }}/reviews
        body: 'The automated process has approved this PR.'
        owner: review_bot
        event: APPROVE
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Merge the PR if the "approved" attribute is true
    - name: Mergr Pull Request
      if: github.event.workflow_run.event == 'pull_request' && env.opa_authz == 'true'
      uses: octokit/request-action@v2.4.0
      with:
        route: PUT /repos/${{ github.repository }}/pulls/${{ github.event.workflow_run.pull_requests[0].number }}/merge
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
