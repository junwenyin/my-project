# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [opened, synchronize]

jobs:
  build-java:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      if: github.event_name == 'push'
      run: ./gradlew build

    - name: Build and Push Docker Image
      if: github.event_name == 'push'
      uses: mr-smithers-excellent/docker-build-push@v4
      with:
        image: junwen2018/demo-app
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Get ChatGPT completion
      id: openai
      uses: junwenyin/openai-api@v1.0.0
      with:
        apiKey: ${{ secrets.OPENAI_API_KEY }}
        prompt: 'You are an intelligent assistant whose role is to analyze the output logs from GitHub Actions and decide whether to approve or reject a suggestion. Your response should always be in the form of a JSON object without any formatting or additional characters. The JSON object should have two fields: description: A brief explanation of why the suggestion should be approved or rejected. approved: A boolean value (true or false) that indicates whether the suggestion is approved (true) or rejected (false).'
        input: 'all steps passed'
        model: 'gpt-4o'
        temperature: 1
        max_tokens: 2000
    - name: parse_json
      run: |
        echo '${{ steps.openai.outputs.completion }}'
        approved=$(echo '${{ steps.openai.outputs.completion }}' | jq -r '.approved')
        echo "Approved: $approved"
        echo "::set-output name=approved::$approved"
        
    # Approve the PR if the "approved" attribute is true
    - name: Approve Pull Request
      if: github.event_name == 'pull_request' && steps.parse_json.outputs.approved == 'true'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.payload.pull_request.number;
          await github.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: prNumber,
            event: 'APPROVE',
            body: 'The automated process has approved this PR.'
          });         
